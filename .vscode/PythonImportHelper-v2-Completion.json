[
    {
        "label": "runpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "runpy",
        "description": "runpy",
        "detail": "runpy",
        "documentation": {}
    },
    {
        "label": "annotations",
        "importPath": "__future__",
        "description": "__future__",
        "isExtraImport": true,
        "detail": "__future__",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "site",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "site",
        "description": "site",
        "detail": "site",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "tkinter",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tkinter",
        "description": "tkinter",
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "filedialog",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "messagebox",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "filedialog",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "messagebox",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageTk",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageTk",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "load_coordinates",
        "importPath": "utils.coords_loader",
        "description": "utils.coords_loader",
        "isExtraImport": true,
        "detail": "utils.coords_loader",
        "documentation": {}
    },
    {
        "label": "bin_dir",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "bin_dir = os.path.dirname(abs_file)\nbase = bin_dir[: -len(\"bin\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"image-coords-app\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.12/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "base = bin_dir[: -len(\"bin\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"image-coords-app\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.12/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path)",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"PATH\"]",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "os.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"image-coords-app\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.12/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV\"]",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"image-coords-app\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.12/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV_PROMPT\"]",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV_PROMPT\"] = \"image-coords-app\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.12/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "prev_length",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "prev_length = len(sys.path)\nfor lib in \"../lib/python3.12/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.path[:]",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "sys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.real_prefix",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "sys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.prefix",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "sys.prefix = base",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "load_coordinates",
        "kind": 2,
        "importPath": "src.utils.coords_loader",
        "description": "src.utils.coords_loader",
        "peekOfCode": "def load_coordinates(file_path):\n    coordinates = []\n    try:\n        with open(file_path, 'r') as f:\n            for line in f:\n                x, y = map(float, line.strip().split(','))\n                coordinates.append((x, y))\n    except FileNotFoundError:\n        print(f\"Error: The file {file_path} was not found.\")\n    except ValueError:",
        "detail": "src.utils.coords_loader",
        "documentation": {}
    },
    {
        "label": "on_click",
        "kind": 2,
        "importPath": "src.image_coords_app",
        "description": "src.image_coords_app",
        "peekOfCode": "def on_click(event):\n    x, y = event.x, event.y\n    coordinates.append((x, y))\n    canvas.create_oval(x - 3, y - 3, x + 3, y + 3, fill=\"red\")\ndef save_coordinates():\n    if not coordinates:\n        messagebox.showinfo(\"Info\", \"座標がありません。\")\n        return\n    file_path = filedialog.asksaveasfilename(\n        defaultextension=\".txt\",",
        "detail": "src.image_coords_app",
        "documentation": {}
    },
    {
        "label": "save_coordinates",
        "kind": 2,
        "importPath": "src.image_coords_app",
        "description": "src.image_coords_app",
        "peekOfCode": "def save_coordinates():\n    if not coordinates:\n        messagebox.showinfo(\"Info\", \"座標がありません。\")\n        return\n    file_path = filedialog.asksaveasfilename(\n        defaultextension=\".txt\",\n        filetypes=[(\"Text files\", \"*.txt\"), (\"All files\", \"*.*\")],\n    )\n    if not file_path:\n        return",
        "detail": "src.image_coords_app",
        "documentation": {}
    },
    {
        "label": "select_image",
        "kind": 2,
        "importPath": "src.image_coords_app",
        "description": "src.image_coords_app",
        "peekOfCode": "def select_image():\n    file_path = filedialog.askopenfilename(\n        filetypes=[(\"Image files\", \"*.png;*.jpg;*.jpeg;*.bmp;*.gif\")]\n    )\n    if not file_path:\n        return\n    try:\n        img = Image.open(file_path)\n    except Exception as e:\n        messagebox.showerror(\"エラー\", f\"画像を開けませんでした: {e}\")",
        "detail": "src.image_coords_app",
        "documentation": {}
    },
    {
        "label": "coordinates",
        "kind": 5,
        "importPath": "src.image_coords_app",
        "description": "src.image_coords_app",
        "peekOfCode": "coordinates = []\ndef on_click(event):\n    x, y = event.x, event.y\n    coordinates.append((x, y))\n    canvas.create_oval(x - 3, y - 3, x + 3, y + 3, fill=\"red\")\ndef save_coordinates():\n    if not coordinates:\n        messagebox.showinfo(\"Info\", \"座標がありません。\")\n        return\n    file_path = filedialog.asksaveasfilename(",
        "detail": "src.image_coords_app",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 5,
        "importPath": "src.image_coords_app",
        "description": "src.image_coords_app",
        "peekOfCode": "root = tk.Tk()\nroot.title(\"画像座標取得アプリ\")\ncanvas = tk.Canvas(root)\ncanvas.pack()\ncanvas.bind(\"<Button-1>\", on_click)\nbtn_select = tk.Button(root, text=\"画像を選択\", command=select_image)\nbtn_select.pack(side=\"left\", padx=5, pady=5)\nbtn_save = tk.Button(root, text=\"座標を保存\", command=save_coordinates)\nbtn_save.pack(side=\"left\", padx=5, pady=5)\nroot.mainloop()",
        "detail": "src.image_coords_app",
        "documentation": {}
    },
    {
        "label": "canvas",
        "kind": 5,
        "importPath": "src.image_coords_app",
        "description": "src.image_coords_app",
        "peekOfCode": "canvas = tk.Canvas(root)\ncanvas.pack()\ncanvas.bind(\"<Button-1>\", on_click)\nbtn_select = tk.Button(root, text=\"画像を選択\", command=select_image)\nbtn_select.pack(side=\"left\", padx=5, pady=5)\nbtn_save = tk.Button(root, text=\"座標を保存\", command=save_coordinates)\nbtn_save.pack(side=\"left\", padx=5, pady=5)\nroot.mainloop()",
        "detail": "src.image_coords_app",
        "documentation": {}
    },
    {
        "label": "btn_select",
        "kind": 5,
        "importPath": "src.image_coords_app",
        "description": "src.image_coords_app",
        "peekOfCode": "btn_select = tk.Button(root, text=\"画像を選択\", command=select_image)\nbtn_select.pack(side=\"left\", padx=5, pady=5)\nbtn_save = tk.Button(root, text=\"座標を保存\", command=save_coordinates)\nbtn_save.pack(side=\"left\", padx=5, pady=5)\nroot.mainloop()",
        "detail": "src.image_coords_app",
        "documentation": {}
    },
    {
        "label": "btn_save",
        "kind": 5,
        "importPath": "src.image_coords_app",
        "description": "src.image_coords_app",
        "peekOfCode": "btn_save = tk.Button(root, text=\"座標を保存\", command=save_coordinates)\nbtn_save.pack(side=\"left\", padx=5, pady=5)\nroot.mainloop()",
        "detail": "src.image_coords_app",
        "documentation": {}
    },
    {
        "label": "display_coordinates",
        "kind": 2,
        "importPath": "src.viewer_app",
        "description": "src.viewer_app",
        "peekOfCode": "def display_coordinates(coordinates):\n    for x, y in coordinates:\n        canvas.create_oval(x - 3, y - 3, x + 3, y + 3, fill=\"red\")\ndef load_and_display(coords_path):\n    try:\n        coordinates = load_coordinates(coords_path)\n        display_coordinates(coordinates)\n    except Exception as e:\n        messagebox.showerror(\"Error\", f\"Failed to load coordinates: {e}\")\ndef select_and_show_image():",
        "detail": "src.viewer_app",
        "documentation": {}
    },
    {
        "label": "load_and_display",
        "kind": 2,
        "importPath": "src.viewer_app",
        "description": "src.viewer_app",
        "peekOfCode": "def load_and_display(coords_path):\n    try:\n        coordinates = load_coordinates(coords_path)\n        display_coordinates(coordinates)\n    except Exception as e:\n        messagebox.showerror(\"Error\", f\"Failed to load coordinates: {e}\")\ndef select_and_show_image():\n    global img, tk_img, canvas\n    file_path = filedialog.askopenfilename(\n        title=\"画像ファイルを選択\",",
        "detail": "src.viewer_app",
        "documentation": {}
    },
    {
        "label": "select_and_show_image",
        "kind": 2,
        "importPath": "src.viewer_app",
        "description": "src.viewer_app",
        "peekOfCode": "def select_and_show_image():\n    global img, tk_img, canvas\n    file_path = filedialog.askopenfilename(\n        title=\"画像ファイルを選択\",\n        filetypes=[(\"Image files\", \"*.jpg;*.jpeg;*.png;*.bmp;*.gif\")],\n    )\n    if not file_path:\n        return\n    img = Image.open(file_path)\n    tk_img = ImageTk.PhotoImage(img)",
        "detail": "src.viewer_app",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 5,
        "importPath": "src.viewer_app",
        "description": "src.viewer_app",
        "peekOfCode": "root = tk.Tk()\nroot.title(\"Coordinate Viewer\")\ncanvas = tk.Canvas(root)\ncanvas.pack()\nbtn = tk.Button(root, text=\"画像を選択\", command=select_and_show_image)\nbtn.pack()\nroot.mainloop()",
        "detail": "src.viewer_app",
        "documentation": {}
    },
    {
        "label": "canvas",
        "kind": 5,
        "importPath": "src.viewer_app",
        "description": "src.viewer_app",
        "peekOfCode": "canvas = tk.Canvas(root)\ncanvas.pack()\nbtn = tk.Button(root, text=\"画像を選択\", command=select_and_show_image)\nbtn.pack()\nroot.mainloop()",
        "detail": "src.viewer_app",
        "documentation": {}
    },
    {
        "label": "btn",
        "kind": 5,
        "importPath": "src.viewer_app",
        "description": "src.viewer_app",
        "peekOfCode": "btn = tk.Button(root, text=\"画像を選択\", command=select_and_show_image)\nbtn.pack()\nroot.mainloop()",
        "detail": "src.viewer_app",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def main():\n    print(\"Hello from image-coords-app!\")\nif __name__ == \"__main__\":\n    main()",
        "detail": "main",
        "documentation": {}
    }
]